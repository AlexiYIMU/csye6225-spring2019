AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  refStackName: 
    Type: String
  amiId:
    Type: String
  roleStackName:
    Type: String
  rdsDBUser:
    Type: String
  rdsDBPass:
    Type: String
  S3BucketName:
    Type: String
  RDSEndPoint:
    Type: String

Resources: 

  Application:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: "csye6225-webapp"     
      ComputePlatform: Server

  DeploymentGroup: 
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties: 
      ApplicationName: !Ref Application
      DeploymentGroupName: "csye6225-webapp-deployment"
      DeploymentConfigName: "CodeDeployDefault.AllAtOnce"
      AutoRollbackConfiguration:
        Enabled: True
        Events: 
         - "DEPLOYMENT_FAILURE"
      DeploymentStyle:
        DeploymentOption: "WITHOUT_TRAFFIC_CONTROL"
        DeploymentType: "IN_PLACE"
      Ec2TagFilters:
          - 
            Key: 
              "Name"
            Value: 
              !Sub ${AWS::StackName}-Ec2Instance
            Type: 
              "KEY_AND_VALUE"
      ServiceRoleArn:
        Fn::ImportValue:
          !Sub ${roleStackName}-CodeDeployServiceRole-Arn

# Setup Security Group for Ec2 Instance
  WebappSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Web Servers
      VpcId: 
        Fn::ImportValue:
          !Sub "${refStackName}-vpcId"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: WebappSecurityGroup

# Create Ec2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: csye6225
      SecurityGroupIds:
        - !Ref WebappSecurityGroup
      DisableApiTermination: false
      SubnetId:
        Fn::ImportValue:
          !Sub "${refStackName}-SubA"
      BlockDeviceMappings: 
        - DeviceName: /dev/sdm
          Ebs: 
            VolumeType: gp2
            DeleteOnTermination: true
            VolumeSize: 20
      ImageId: !Sub ${amiId}
      IamInstanceProfile: 
        Fn::ImportValue:
          !Sub "${roleStackName}-Ec2InstanceProfile"
      UserData:
        Fn::Base64:
          !Sub |
              #!/bin/sh
              sudo chmod 777 /etc/tomcat/tomcat.conf
              sudo echo \"JAVA_OPTS=\\\"\\$JAVA_OPTS -Dspring.profiles.active=dev\\\"\" >> /etc/tomcat/tomcat.conf
              sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://${rdsInstance.Endpoint.Address}:3306/csye6225\"' >> /etc/tomcat/tomcat.conf
              sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=${rdsDBUser}\"' >> /etc/tomcat/tomcat.conf
              sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=${rdsDBPass}\"' >> /etc/tomcat/tomcat.conf
              sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dbucket.name=${S3BucketName}\"' >> /etc/tomcat/tomcat.conf
              sudo systemctl restart tomcat

              #!/bin/bash -ex
              mysql -h ${rdsInstance.Endpoint.Address} -P 3306 -u csye6225master -pcsye6225password
              use csye6225;
              drop table if exists user;
              CREATE TABLE user(
                 id INT PRIMARY KEY AUTO_INCREMENT,
                 email_address VARCHAR(255),
                 pwd_string VARCHAR(255)
              );
              drop table if exists note;
              CREATE TABLE csye6225.`note` ( 
                 `id` varchar(36) NOT NULL ,  
                 `user_id` int(11) DEFAULT '0',   
                 `title` varchar(255) DEFAULT '',   
                 `content` varchar(255) DEFAULT '',   
                 `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP,  
                 `update_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,   
                 PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
              drop table if exists attachment;
              CREATE TABLE attachment ( id varchar(36) NOT NULL, note_id varchar(36) NOT NULL, url varchar(255) NOT NULL, file_name varchar(255) NOT NULL, file_size bigint(32) default 0, file_type char(8) not null, create_time timestamp NULL DEFAULT CURRENT_TIMESTAMP, update_time timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id) ) ENGINE=InnoDB DEFAULT CHARSET=utf8; 
              exit;

      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Ec2Instance
 
# # Create DynamoDB
#   dynamoDB: 
#     Type: AWS::DynamoDB::Table
#     Properties: 
#       AttributeDefinitions: 
#         - 
#           AttributeName: "id"
#           AttributeType: "S"
#       KeySchema: 
#         - 
#           AttributeName: "id"
#           KeyType: "HASH"
#       ProvisionedThroughput: 
#         ReadCapacityUnits: "5"
#         WriteCapacityUnits: "5"
#       TableName: "csye6225"
      
# Setup DBSecurity Group
  rdsDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Web Servers
      VpcId: 
        Fn::ImportValue:
          !Sub "${refStackName}-vpcId"
      SecurityGroupIngress:
      - SourceSecurityGroupId: !Ref WebappSecurityGroup
        IpProtocol: tcp
        FromPort: "3306"
        ToPort: "3306"
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-csye6225-rdsDBSecurityGroup
  
# Setup RDS Subnet Group
  rdsSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "Subnet for RDS instances"
      SubnetIds:
      - Fn::ImportValue:
          !Sub "${refStackName}-SubA"
      - Fn::ImportValue:
          !Sub "${refStackName}-SubB"
      - Fn::ImportValue:
          !Sub "${refStackName}-SubC"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-csye6225-rdsSubnetGroup

#Create RDS Instance
  rdsInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 5
      DBName: csye6225
      Engine: MySQL
      DBInstanceClass: db.t2.medium
      MultiAZ: false
      DBInstanceIdentifier: csye6225-spring2019
      MasterUsername: csye6225master
      MasterUserPassword: csye6225password
      PubliclyAccessible: true
      DBSubnetGroupName: !Ref rdsSubnetGroup
      VPCSecurityGroups: 
      - !GetAtt rdsDBSecurityGroup.GroupId
##Application
##test5
  